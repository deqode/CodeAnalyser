{
    "name": "Spectrum",
    "version": "3.1.15",
    "license": "BSD-3-Clause",
    "devDependencies": {
        "babel-eslint": "^8.2.6",
        "babel-plugin-inline-import-graphql-ast": "^2.0.4",
        "babel-plugin-styled-components": "^1.8.0",
        "babel-plugin-syntax-async-generators": "^6.13.0",
        "babel-plugin-syntax-dynamic-import": "^6.18.0",
        "babel-plugin-transform-async-generator-functions": "^6.24.1",
        "babel-plugin-transform-class-properties": "^6.24.1",
        "babel-plugin-transform-flow-strip-types": "^6.22.0",
        "babel-plugin-transform-object-rest-spread": "^6.23.0",
        "babel-preset-env": "^1.7.0",
        "bundle-buddy-webpack-plugin": "^0.3.0",
        "circular-dependency-plugin": "4.x",
        "cypress-plugin-retries": "^1.2.0",
        "eslint-plugin-flowtype": "^2.50.3",
        "eslint-plugin-react": "^7.12.4",
        "lint-staged": "^3.3.0",
        "micromatch": "^3.0.4",
        "raw-loader": "^0.5.1",
        "react-app-rewire-hot-loader": "^1.0.3",
        "react-hot-loader": "^4.12.13",
        "sw-precache-webpack-plugin": "^0.11.4",
        "uuid": "^3.0.1",
        "webpack-bundle-analyzer": "^3.3.2",
        "write-file-webpack-plugin": "^4.5.1"
    },
    "dependencies": {
        "@cypress/browserify-preprocessor": "^1.1.2",
        "@tippy.js/react": "^2.1.1",
        "algoliasearch": "^3.30.0",
        "apollo-cache-inmemory": "^1.6.3",
        "apollo-client": "^2.6.4",
        "apollo-link": "^1.2.13",
        "apollo-link-http": "^1.5.16",
        "apollo-link-retry": "^2.2.15",
        "apollo-link-schema": "^1.2.4",
        "apollo-link-ws": "^1.0.19",
        "apollo-upload-client": "^11.0.0",
        "apollo-utilities": "^1.3.2",
        "b2a": "^1.0.10",
        "body-parser": "^1.18.3",
        "bull": "^3.5.2",
        "common-tags": "^1.8.0",
        "cookie-parser": "^1.4.3",
        "cookie-session": "^2.0.0-beta.3",
        "cors": "^2.8.3",
        "cryptr": "^3.0.0",
        "css.escape": "^1.5.1",
        "datadog-metrics": "^0.8.1",
        "debounce": "^1.2.0",
        "debug": "^4.1.0",
        "decode-uri-component": "^0.2.0",
        "draft-js": "npm:draft-js-fork-mxstbr",
        "draft-js-import-markdown": "^1.3.1",
        "draft-js-linkify-plugin": "^2.0.2",
        "emoji-regex": "^6.1.1",
        "express": "^4.16.4",
        "express-enforces-ssl": "^1.1.0",
        "express-hot-shots": "^1.0.2",
        "graphql-tag": "^2.10.0",
        "helmet": "^3.14.0",
        "history": "^4.6.1",
        "hoist-non-react-statics": "^2.3.1",
        "host-validation": "^1.1.0",
        "hpp": "^0.2.2",
        "hsts": "^2.1.0",
        "http-proxy-middleware": "^1.0.4",
        "idx": "^2.4.0",
        "imgix-core-js": "^1.0.6",
        "ioredis": "3.2.2",
        "is-electron": "^2.1.0",
        "isomorphic-fetch": "^2.2.1",
        "jsonwebtoken": "^8.3.0",
        "keygrip": "^1.0.3",
        "lodash": "^4.17.15",
        "ms": "^2.1.1",
        "now-env": "^3.1.0",
        "offline-plugin": "^5.0.5",
        "passport": "^0.4.0",
        "prism-react-renderer": "^0.1.7",
        "query-string": "5.1.1",
        "raf": "^3.4.0",
        "ratelimiter": "^3.2.0",
        "raven": "^2.6.4",
        "react": "^16.8.4",
        "react-apollo": "^2.5.1",
        "react-app-rewire-styled-components": "^3.0.0",
        "react-app-rewired": "1.6.2",
        "react-clipboard.js": "^2.0.1",
        "react-dom": "npm:@hot-loader/react-dom",
        "react-dropzone": "^8.0.3",
        "react-helmet-async": "^0.2.0",
        "react-image": "^1.5.1",
        "react-infinite-scroller-fork-mxstbr": "^1.2.7",
        "react-loadable": "^5.5.0",
        "react-mentions": "^4.0.1",
        "react-modal": "^3.7.1",
        "react-popper": "^1.3.3",
        "react-redux": "^5.0.2",
        "react-router": "4.x",
        "react-router-dom": "4.x",
        "react-textarea-autosize": "^6.1.0",
        "react-visibility-sensor": "^5.0.1",
        "recompose": "^0.27.1",
        "redis-tag-cache": "^1.2.1",
        "redraft": "0.10.2",
        "redux": "^3.6.0",
        "redux-thunk": "^2.3.0",
        "request-ip": "^2.1.3",
        "rethinkdb-changefeed-reconnect": "^0.3.2",
        "rethinkdb-inspector": "^0.3.3",
        "rethinkdb-migrate": "^1.4.0",
        "rethinkhaberdashery": "^2.3.32",
        "serialize-javascript": "^1.5.0",
        "slate": "^0.20.1",
        "slugg": "^1.1.0",
        "snarkdown": "^1.2.2",
        "string-replace-to-array": "^1.0.3",
        "styled-components": "^4.1.3",
        "toobusy-js": "^0.5.1",
        "validator": "^9.0.0",
        "web-push": "^3.3.3",
        "webpack": "5.37.1",
        "src": "1.1.2",
        "shared": "0.2.0",
        "api": "3.1.0",
        "hermes": "0.4.4",
        "athena": "0.2.0",
        "vulcan": "0.2.1",
        "mercury": "14.2.0",
        "chronos": "0.1.0",
        "rethinkdbdash": "2.3.31",
        "type-detect": "4.0.8",
        "node-fetch": "2.6.1"
    },
    "resolutions": {
        "immutable": "3.7.4",
        "draft-js": "npm:draft-js-fork-mxstbr",
        "jest-environment-node": "22.4.3",
        "jest": "22.4.3",
        "fbjs": "0.8.16",
        "event-stream": "3.3.4"
    },
    "scripts": {
        "start": "NODE_ENV=production node main.js",
        "start:athena": "cross-env NODE_ENV=production node build-athena/main.js",
        "start:hermes": "cross-env NODE_ENV=production node build-hermes/main.js",
        "start:chronos": "cross-env NODE_ENV=production node build-chronos/main.js",
        "start:mercury": "cross-env NODE_ENV=production node build-mercury/main.js",
        "start:vulcan": "cross-env NODE_ENV=production node build-vulcan/main.js",
        "start:api": "cross-env NODE_ENV=production node build-api/main.js",
        "dev:web": "cross-env NODE_PATH=./ react-app-rewired start",
        "dev:api": "cross-env FILE_STORAGE=local cross-env NODE_PATH=./ cross-env NODE_ENV=development cross-env DEBUG=build*,api*,shared:rethinkdb:db-query-cache,-api:resolvers,shared:middlewares:ratelimiter cross-env DIR=api backpack",
        "dev:api:s3": "cross-env FILE_STORAGE=s3 cross-env NODE_PATH=./ cross-env NODE_ENV=development cross-env DEBUG=build*,api*,shared:rethinkdb:db-query-cache,-api:resolvers cross-env DIR=api backpack",
        "dev:athena": "cross-env NODE_PATH=./ cross-env NODE_ENV=development cross-env DEBUG=build*,athena*,-athena:resolvers cross-env DIR=athena backpack",
        "dev:hermes": "cross-env NODE_PATH=./ cross-env NODE_ENV=development cross-env DEBUG=build*,hermes*,-hermes:resolvers cross-env DIR=hermes backpack",
        "dev:chronos": "cross-env NODE_PATH=./ cross-env NODE_ENV=development cross-env DEBUG=build*,chronos*,-chronos:resolvers cross-env DIR=chronos backpack",
        "dev:mercury": "cross-env NODE_PATH=./ cross-env NODE_ENV=development cross-env DEBUG=build*,mercury*,-mercury:resolvers cross-env DIR=mercury backpack",
        "dev:vulcan": "cross-env NODE_PATH=./ cross-env NODE_ENV=development cross-env DEBUG=build*,vulcan*,-vulcan:resolvers cross-env DIR=vulcan backpack",
        "dev:hyperion": "cross-env NODE_PATH=./ cross-env NODE_ENV=development cross-env DEBUG=build*,hyperion*,-hyperion:resolvers cross-env DIR=hyperion backpack",
        "dev:desktop": "(cd desktop && yarn run dev)",
        "prebuild:api": "rimraf build-api",
        "build:api": "cross-env NODE_PATH=./ cross-env DIR=api backpack build",
        "postbuild:api": "cp api/package.json build-api/package.json && cp now.json build-api/now.json && cpy cacert build-api",
        "prebuild:athena": "rimraf build-athena",
        "build:athena": "cross-env NODE_PATH=./ cross-env DIR=athena backpack build",
        "postbuild:athena": "cp athena/package.json build-athena/package.json && cp now.json build-athena/now.json && cpy cacert build-athena",
        "prebuild:hermes": "rimraf build-hermes",
        "build:hermes": "cross-env NODE_PATH=./ cross-env DIR=hermes backpack build",
        "postbuild:hermes": "cp hermes/package.json build-hermes/package.json && cp now.json build-hermes/now.json && cpy cacert build-hermes",
        "prebuild:chronos": "rimraf build-chronos",
        "build:chronos": "cross-env NODE_PATH=./ cross-env DIR=chronos backpack build",
        "postbuild:chronos": "cp chronos/package.json build-chronos/package.json && cp now.json build-chronos/now.json && cpy cacert build-chronos",
        "prebuild:mercury": "rimraf build-mercury",
        "build:mercury": "cross-env NODE_PATH=./ cross-env DIR=mercury backpack build",
        "postbuild:mercury": "cp mercury/package.json build-mercury/package.json && cp now.json build-mercury/now.json && cpy cacert build-mercury",
        "prebuild:vulcan": "rimraf build-vulcan",
        "build:vulcan": "cross-env NODE_PATH=./ cross-env DIR=vulcan backpack build",
        "postbuild:vulcan": "cp vulcan/package.json build-vulcan/package.json && cp now.json build-vulcan/now.json && cpy cacert build-vulcan",
        "prebuild:hyperion": "rimraf build && yarn run build:web && rimraf build-hyperion",
        "build:hyperion": "cross-env NODE_PATH=./ cross-env DIR=hyperion backpack build",
        "postbuild:hyperion": "cp -r build build-hyperion && cp now.json build-hyperion && cp yarn.lock build-hyperion && cp package.json build-hyperion && cp cacert build-hyperion",
        "build:web": "cross-env NODE_PATH=./ react-app-rewired build",
        "build:desktop": "(cd desktop && yarn run package:all)",
        "test:desktop": "(cd desktop && yarn run package:test)",
        "release:desktop": "(cd desktop && yarn run release)",
        "jest": "cross-env NODE_PATH=./ jest",
        "test": "npm run jest -- --runInBand --watch",
        "test:ci": "npm run jest -- --forceExit --outputFile test-results.json --json --maxWorkers=2",
        "test:e2e": "CYPRESS_RETRIES=2 cypress run",
        "prestart:api:test": "node -e \"require('./shared/testing/setup.js')().then(() => process.exit())\"",
        "start:api:test": "TEST_DB=true FORCE_DEV=true DEBUG=api*,shared* forever build-api/main.js",
        "cypress:open": "cypress open",
        "cypress:install": "cypress install",
        "lint": "eslint .",
        "flow": "flow",
        "db:migrate": "npm run rethinkdb:migrate -- up",
        "db:drop": "npm run rethinkdb:migrate -- down",
        "db:seed": "cross-env NODE_PATH=./ node api/migrations/seed/index.js",
        "db:reset": "yarn run db:drop && yarn run db:migrate && yarn run db:seed",
        "rethinkdb:migrate": "rethinkdb-migrate -f ./api/migrations/config.js",
        "eject": "react-scripts eject",
        "lint:staged": "lint-staged",
        "webpack-defaults": "webpack-defaults",
        "process:emails:test": "(cd email-template-scripts && python3 inline-html-emails.py && node sendgrid-sync.js)",
        "process:emails:prod": "(cd email-template-scripts && python3 inline-html-emails.py && node sendgrid-sync.js prod)",
        "process:emails:send": "(cd email-template-scripts && node send-test-emails.js brian@spectrum.chat)",
        "deploy": "node scripts/deploy",
        "heroku": "node scripts/heroku-deploy"
    },
    "lint-staged": {
        "*.js": [
            "prettier --write",
            "eslint --fix",
            "git add"
        ]
    },
    "pre-commit": "lint:staged"
}