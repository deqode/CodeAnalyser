syntax = "proto3";
option go_package = "code-analyser/protos/pb";

import "protos/output/global/dockercompose.proto";
import "protos/output/global/dockerfile.proto";
import "protos/output/global/makefile.proto";
import "protos/output/global/procfile.proto";

import  "protos/output/language_specific/appserver.proto";
import "protos/output/language_specific/db.proto";
import "protos/output/language_specific/dependencies.proto";
import "protos/output/language_specific/env.proto";
import "protos/output/language_specific/framework.proto";
import "protos/output/language_specific/libraries.proto";
import "protos/output/language_specific/orm.proto";
import "protos/output/language_specific/stack.proto";
import "protos/output/language_specific/staticAssets.proto";
import "protos/output/language_specific/testCasesCommand.proto";
import "protos/output/language_specific/commands.proto";

message LanguageSpecificDetections {
  string name = 1;
  string runtimeVersion = 2;
  protos.output.language_specific.Envs env = 3;
  repeated protos.output.language_specific.FrameworkOutput framework = 4;
  protos.output.language_specific.DBOutput db = 5;
  protos.output.language_specific.OrmOutput orm = 6;
  repeated protos.output.language_specific.DependenciesOutput dependencies = 7;
  repeated protos.output.language_specific.LibraryOutput libraries = 8;
  protos.output.language_specific.StaticAssetsOutput staticAssets = 9;
  repeated protos.output.language_specific.StackOutput stackOutput = 10;
  repeated protos.output.language_specific.AppserverOutput appserver = 11;
  map<string, string> buildDirectory = 12;
  protos.output.language_specific.TestCasesCommandOutput testCases = 13;
  protos.output.language_specific.Commands commands = 14;
  // todo: DetectTestCasesRunCommands
}

message GlobalDetections {
  protos.output.global.ProcFile procFile = 1;
  protos.output.global.MakeFile makefile = 2;
  protos.output.global.DockerFile dockerFile = 3;
  protos.output.global.DockerCompose dockerComposeFile = 4;
}

message DecisionMakerInput {
  repeated LanguageSpecificDetections languageSpecificDetection = 1;
  GlobalDetections gloabalDetections = 2;
}