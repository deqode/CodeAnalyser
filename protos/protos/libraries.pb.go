// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/outputs/languageSpecific/libraries.proto

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type LibrariesOutput struct {
	// check library
	Used bool `protobuf:"varint,1,opt,name=used" json:"used,omitempty"`
	// list of all library
	Libraries []*Library `protobuf:"bytes,2,rep,name=libraries" json:"libraries,omitempty"`
}

func (m *LibrariesOutput) Reset()                    { *m = LibrariesOutput{} }
func (m *LibrariesOutput) String() string            { return proto.CompactTextString(m) }
func (*LibrariesOutput) ProtoMessage()               {}
func (*LibrariesOutput) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{0} }

func (m *LibrariesOutput) GetUsed() bool {
	if m != nil {
		return m.Used
	}
	return false
}

func (m *LibrariesOutput) GetLibraries() []*Library {
	if m != nil {
		return m.Libraries
	}
	return nil
}

type Library struct {
	//  name of library
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	//  type of library
	Type string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
}

func (m *Library) Reset()                    { *m = Library{} }
func (m *Library) String() string            { return proto.CompactTextString(m) }
func (*Library) ProtoMessage()               {}
func (*Library) Descriptor() ([]byte, []int) { return fileDescriptor16, []int{1} }

func (m *Library) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Library) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func init() {
	proto.RegisterType((*LibrariesOutput)(nil), "LibrariesOutput")
	proto.RegisterType((*Library)(nil), "Library")
}

func init() { proto.RegisterFile("protos/outputs/languageSpecific/libraries.proto", fileDescriptor16) }

var fileDescriptor16 = []byte{
	// 159 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x2f, 0x28, 0xca, 0x2f,
	0xc9, 0x2f, 0xd6, 0xcf, 0x2f, 0x2d, 0x29, 0x28, 0x2d, 0x29, 0xd6, 0xcf, 0x49, 0xcc, 0x4b, 0x2f,
	0x4d, 0x4c, 0x4f, 0x0d, 0x2e, 0x48, 0x4d, 0xce, 0x4c, 0xcb, 0x4c, 0xd6, 0xcf, 0xc9, 0x4c, 0x2a,
	0x4a, 0x2c, 0xca, 0x4c, 0x2d, 0xd6, 0x03, 0xab, 0x54, 0xf2, 0xe5, 0xe2, 0xf7, 0x81, 0x09, 0xf9,
	0x83, 0x35, 0x09, 0x09, 0x71, 0xb1, 0x94, 0x16, 0xa7, 0xa6, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70,
	0x04, 0x81, 0xd9, 0x42, 0x6a, 0x5c, 0x9c, 0x70, 0x9d, 0x12, 0x4c, 0x0a, 0xcc, 0x1a, 0xdc, 0x46,
	0x1c, 0x7a, 0x10, 0x8d, 0x95, 0x41, 0x08, 0x29, 0x25, 0x43, 0x2e, 0x76, 0xa8, 0x28, 0xc8, 0x98,
	0xbc, 0xc4, 0xdc, 0x54, 0xb0, 0x31, 0x9c, 0x41, 0x60, 0x36, 0x48, 0xac, 0xa4, 0xb2, 0x20, 0x55,
	0x82, 0x09, 0x22, 0x06, 0x62, 0x3b, 0x71, 0x45, 0x71, 0xe8, 0x41, 0x9d, 0x9d, 0xc4, 0x06, 0xa6,
	0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xbe, 0xaa, 0xed, 0x82, 0xc7, 0x00, 0x00, 0x00,
}
