// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/outputs/languageSpecific/db.proto

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type DBOutput struct {
	// check Db
	Used bool `protobuf:"varint,1,opt,name=used" json:"used,omitempty"`
	// list of all dbs
	Databases []*DB `protobuf:"bytes,2,rep,name=databases" json:"databases,omitempty"`
}

func (m *DBOutput) Reset()                    { *m = DBOutput{} }
func (m *DBOutput) String() string            { return proto.CompactTextString(m) }
func (*DBOutput) ProtoMessage()               {}
func (*DBOutput) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{0} }

func (m *DBOutput) GetUsed() bool {
	if m != nil {
		return m.Used
	}
	return false
}

func (m *DBOutput) GetDatabases() []*DB {
	if m != nil {
		return m.Databases
	}
	return nil
}

type DB struct {
	//  name of db
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	//  version of db
	Version string `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	// port
	Port int64 `protobuf:"varint,3,opt,name=port" json:"port,omitempty"`
}

func (m *DB) Reset()                    { *m = DB{} }
func (m *DB) String() string            { return proto.CompactTextString(m) }
func (*DB) ProtoMessage()               {}
func (*DB) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{1} }

func (m *DB) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DB) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *DB) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

func init() {
	proto.RegisterType((*DBOutput)(nil), "DBOutput")
	proto.RegisterType((*DB)(nil), "DB")
}

func init() { proto.RegisterFile("protos/outputs/languageSpecific/db.proto", fileDescriptor12) }

var fileDescriptor12 = []byte{
	// 174 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x8e, 0x31, 0x0b, 0xc2, 0x30,
	0x10, 0x85, 0x69, 0x23, 0xda, 0x9e, 0x5b, 0xa6, 0x8c, 0xb5, 0x53, 0xa6, 0x06, 0xf4, 0x17, 0x18,
	0x8a, 0xab, 0x10, 0x37, 0xb7, 0xb4, 0x8d, 0xa5, 0xa0, 0x4d, 0xe8, 0x25, 0xfe, 0x7e, 0xe9, 0x89,
	0x38, 0xdd, 0x77, 0x8f, 0xef, 0xc1, 0x03, 0x19, 0x16, 0x1f, 0x3d, 0x2a, 0x9f, 0x62, 0x48, 0x11,
	0xd5, 0xd3, 0xce, 0x63, 0xb2, 0xa3, 0xbb, 0x05, 0xd7, 0x4f, 0x8f, 0xa9, 0x57, 0x43, 0xd7, 0x90,
	0x52, 0x9f, 0xa1, 0x68, 0xf5, 0x95, 0x34, 0xce, 0x61, 0x93, 0xd0, 0x0d, 0x22, 0xab, 0x32, 0x59,
	0x18, 0x62, 0x7e, 0x80, 0x72, 0xb0, 0xd1, 0x76, 0x16, 0x1d, 0x8a, 0xbc, 0x62, 0x72, 0x7f, 0x64,
	0x4d, 0xab, 0xcd, 0x3f, 0xad, 0x2f, 0x90, 0xb7, 0x7a, 0x2d, 0xcf, 0xf6, 0xe5, 0xa8, 0x5c, 0x1a,
	0x62, 0x2e, 0x60, 0xf7, 0x76, 0x0b, 0x4e, 0x7e, 0x16, 0x39, 0xc5, 0xbf, 0x77, 0xb5, 0x83, 0x5f,
	0xa2, 0x60, 0x55, 0x26, 0x99, 0x21, 0xd6, 0x70, 0x2f, 0x1a, 0xf5, 0x1d, 0xde, 0x6d, 0xe9, 0x9e,
	0x3e, 0x01, 0x00, 0x00, 0xff, 0xff, 0xba, 0x8f, 0x24, 0x43, 0xc9, 0x00, 0x00, 0x00,
}
