// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/outputs/languageSpecific/env.proto

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EnvOutput struct {
	//  checker
	EnvUsed bool `protobuf:"varint,1,opt,name=envUsed" json:"envUsed,omitempty"`
	//  values
	Values map[string]string `protobuf:"bytes,2,rep,name=values" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// variables
	Variable string `protobuf:"bytes,4,opt,name=variable" json:"variable,omitempty"`
}

func (m *EnvOutput) Reset()                    { *m = EnvOutput{} }
func (m *EnvOutput) String() string            { return proto.CompactTextString(m) }
func (*EnvOutput) ProtoMessage()               {}
func (*EnvOutput) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{0} }

func (m *EnvOutput) GetEnvUsed() bool {
	if m != nil {
		return m.EnvUsed
	}
	return false
}

func (m *EnvOutput) GetValues() map[string]string {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *EnvOutput) GetVariable() string {
	if m != nil {
		return m.Variable
	}
	return ""
}

func init() {
	proto.RegisterType((*EnvOutput)(nil), "EnvOutput")
}

func init() { proto.RegisterFile("protos/outputs/languageSpecific/env.proto", fileDescriptor14) }

var fileDescriptor14 = []byte{
	// 196 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x2c, 0x28, 0xca, 0x2f,
	0xc9, 0x2f, 0xd6, 0xcf, 0x2f, 0x2d, 0x29, 0x28, 0x2d, 0x29, 0xd6, 0xcf, 0x49, 0xcc, 0x4b, 0x2f,
	0x4d, 0x4c, 0x4f, 0x0d, 0x2e, 0x48, 0x4d, 0xce, 0x4c, 0xcb, 0x4c, 0xd6, 0x4f, 0xcd, 0x2b, 0xd3,
	0x03, 0xab, 0x51, 0x5a, 0xc3, 0xc8, 0xc5, 0xe9, 0x9a, 0x57, 0xe6, 0x0f, 0x56, 0x29, 0x24, 0xc1,
	0xc5, 0x9e, 0x9a, 0x57, 0x16, 0x5a, 0x9c, 0x9a, 0x22, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x11, 0x04,
	0xe3, 0x0a, 0xe9, 0x71, 0xb1, 0x95, 0x25, 0xe6, 0x94, 0xa6, 0x16, 0x4b, 0x30, 0x29, 0x30, 0x6b,
	0x70, 0x1b, 0x89, 0xe9, 0xc1, 0x75, 0xe9, 0x85, 0x81, 0x25, 0x5c, 0xf3, 0x4a, 0x8a, 0x2a, 0x83,
	0xa0, 0xaa, 0x84, 0xa4, 0xb8, 0x38, 0xca, 0x12, 0x8b, 0x32, 0x13, 0x93, 0x72, 0x52, 0x25, 0x58,
	0x14, 0x18, 0x35, 0x38, 0x83, 0xe0, 0x7c, 0x29, 0x4b, 0x2e, 0x6e, 0x24, 0x2d, 0x42, 0x02, 0x5c,
	0xcc, 0xd9, 0xa9, 0x95, 0x60, 0x0b, 0x39, 0x83, 0x40, 0x4c, 0x21, 0x11, 0x2e, 0x56, 0xb0, 0x31,
	0x12, 0x4c, 0x60, 0x31, 0x08, 0xc7, 0x8a, 0xc9, 0x82, 0xd1, 0x89, 0x2b, 0x8a, 0x43, 0x4f, 0x1f,
	0xe2, 0xbb, 0x24, 0x36, 0x30, 0x6d, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xa1, 0xeb, 0x5b, 0x72,
	0xee, 0x00, 0x00, 0x00,
}
